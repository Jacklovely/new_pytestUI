{
  "uid" : "41821df2adfc9eed",
  "name" : "test_new_repository[点击新建储存库]",
  "fullName" : "case.test_new_repository.Test_New_Repository#test_new_repository",
  "historyId" : "121391a9c8e7470ec7a04d068aae32ff",
  "time" : {
    "start" : 1607929168917,
    "stop" : 1607929168917,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"41a52db3c5e0be9d668948dd46a475a3\")>\n\n    @pytest.fixture(scope=\"session\")\n    def login_fixtrue(browser):\n        #登录前置操作\n        # driver = webdriver.Chrome()\n        # driver.maximize_window()\n        web = LoginPage(_driver)\n>       web.login()\n\ncase\\conftest.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:36: in login\n    self.input_username(user)\npages\\login_page.py:23: in input_username\n    self.input(self.loc1, text)\ncommon\\base.py:71: in input\n    ele = self.find(locator)\ncommon\\base.py:52: in find\n    raise msg\ncommon\\base.py:49: in find\n    ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"41a52db3c5e0be9d668948dd46a475a3\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002689133BF88>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1607929111022,
      "stop" : 1607929111022,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1607929110950,
      "stop" : 1607929111021,
      "duration" : 71
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1607929111022,
      "stop" : 1607929111022,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1607929168918,
      "stop" : 1607929168921,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "login_fixtrue",
    "time" : {
      "start" : 1607929168921,
      "stop" : 1607929183686,
      "duration" : 14765
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
    "statusTrace" : "  File \"D:\\python\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\python\\lib\\site-packages\\_pytest\\fixtures.py\", line 1111, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\python\\lib\\site-packages\\_pytest\\fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"F:\\pytestUI\\case\\conftest.py\", line 26, in login_fixtrue\n    web.login()\n  File \"F:\\pytestUI\\pages\\login_page.py\", line 36, in login\n    self.input_username(user)\n  File \"F:\\pytestUI\\pages\\login_page.py\", line 23, in input_username\n    self.input(self.loc1, text)\n  File \"F:\\pytestUI\\common\\base.py\", line 71, in input\n    ele = self.find(locator)\n  File \"F:\\pytestUI\\common\\base.py\", line 52, in find\n    raise msg\n  File \"F:\\pytestUI\\common\\base.py\", line 49, in find\n    ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n  File \"D:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"41a52db3c5e0be9d668948dd46a475a3\")>\n\n    @pytest.fixture(scope=\"session\")\n    def login_fixtrue(browser):\n        #登录前置操作\n        # driver = webdriver.Chrome()\n        # driver.maximize_window()\n        web = LoginPage(_driver)\n>       web.login()\n\ncase\\conftest.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:36: in login\n    self.input_username(user)\npages\\login_page.py:23: in input_username\n    self.input(self.loc1, text)\ncommon\\base.py:71: in input\n    ele = self.find(locator)\ncommon\\base.py:52: in find\n    raise msg\ncommon\\base.py:49: in find\n    ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"41a52db3c5e0be9d668948dd46a475a3\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002689133BF88>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d0edb87b8a91a449",
      "name" : "log",
      "source" : "d0edb87b8a91a449.txt",
      "type" : "text/plain",
      "size" : 11018
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1607929183707,
      "stop" : 1607929185813,
      "duration" : 2106
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "功能点：新建储存库"
  }, {
    "name" : "story",
    "value" : "用例：新建储存库"
  }, {
    "name" : "parentSuite",
    "value" : "case"
  }, {
    "name" : "suite",
    "value" : "test_new_repository"
  }, {
    "name" : "subSuite",
    "value" : "Test_New_Repository"
  }, {
    "name" : "host",
    "value" : "PC-20200723MDZP"
  }, {
    "name" : "thread",
    "value" : "19252-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "case.test_new_repository"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "msg",
    "value" : "['Create a new r']"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "41821df2adfc9eed.json",
  "parameterValues" : [ "['Create a new r']" ]
}